package controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;


import io.swagger.v3.oas.annotations.parameters.RequestBody;
import javassist.tools.rmi.ObjectNotFoundException;
import model.Cliente;
import service.ClienteService;


@RestController
@RequestMapping("clientes") 
public class ClienteController {
	@Autowired
	private ClienteService clienteService;
	
	@GetMapping("/get")
	public  ResponseEntity<List<Cliente>> buscarTodos(){
		return  ResponseEntity.ok.(clienteService.buscarTodos());
		
		
		
		
	}
	
	@PostMapping("/post")
	public ResponseEntity<Cliente> criarCliente(@RequestBody Cliente cliente){
		 clienteService.criarCliente(cliente);
		return ResponseEntity.ok(cliente);
		
		
	}
	
	@GetMapping("/get/{id}")
	public ResponseEntity<Object>buscarPorId(@PathVariable Long id) throws ObjectNotFoundException{
		return ResponseEntity.ok().body(clienteService.buscarPorId(id));
		
}
	@PutMapping("/put/{id}")
	public ResponseEntity<Object>atualizarDados(@PathVariable Long id, @RequestBody Cliente cliente){
		return ResponseEntity.ok().body(clienteService.atualizarDados(id, cliente));
		
	}
	
	@DeleteMapping("/delete/{id}")
	public void deletarDados(@PathVariable Long id) {
		clienteService.deletarDados(id);
	}
	
}